import{j as e}from"./jsx-runtime-9c4ae004.js";import{G as s,l as o}from"./RadialMenu-92dfd502.js";import"./index-1b03fe98.js";import{e as r,b as oe,f as ce,i as le,m as ue,g as a}from"./demo-9c61d665.js";import"./index-27578f8f.esm-24d23efb.js";import"./extends-98964cd2.js";import"./client-449ccf6c.js";import"./index-6fd5a17b.js";const ye={title:"Demos/Cluster",component:s},c=()=>e.jsx(s,{nodes:r,draggable:!0,edges:[],clusterAttribute:"type"}),ae=r.map(t=>({...t,size:oe(0,50)})),l=()=>e.jsx(s,{nodes:ae,draggable:!0,edges:[],clusterAttribute:"type"}),u=()=>e.jsx(s,{nodes:ce,draggable:!0,edges:[],clusterAttribute:"type"}),d=()=>e.jsx(s,{nodes:le,draggable:!0,edges:[],clusterAttribute:"type"}),n=()=>e.jsx(s,{nodes:ue,draggable:!0,edges:[],clusterAttribute:"type"}),i=()=>e.jsx(s,{nodes:r,draggable:!0,edges:a,clusterAttribute:"type"}),g=()=>e.jsx(s,{nodes:r,selections:[r[0].id],edges:a,clusterAttribute:"type"}),p=()=>e.jsx(s,{nodes:r,draggable:!0,edges:a,clusterAttribute:"type",onClusterPointerOut:t=>console.log("cluster pointer out",t),onClusterPointerOver:t=>console.log("cluster pointer over",t),onClusterClick:t=>console.log("cluster click",t)}),m=()=>e.jsx(s,{theme:{...o,cluster:null},nodes:r,draggable:!0,edges:a,clusterAttribute:"type"}),b=()=>e.jsx(s,{theme:{...o,cluster:{...o.cluster,label:null}},nodes:r,draggable:!0,edges:a,clusterAttribute:"type"}),h=()=>e.jsx(s,{theme:{...o,cluster:{...o.cluster,stroke:null}},nodes:r,draggable:!0,edges:a,clusterAttribute:"type"}),y=()=>e.jsx(s,{nodes:ae,draggable:!0,edges:[],layoutType:"forceDirected3d",clusterAttribute:"type",children:e.jsx("directionalLight",{position:[0,5,-4],intensity:1})}),C=()=>e.jsx(s,{nodes:r,draggable:!0,edges:[],clusterAttribute:"segment"});var A,N,v;c.parameters={...c.parameters,docs:{...(A=c.parameters)==null?void 0:A.docs,source:{originalSource:'() => <GraphCanvas nodes={clusterNodes} draggable edges={[]} clusterAttribute="type" />',...(v=(N=c.parameters)==null?void 0:N.docs)==null?void 0:v.source}}};var S,x,j;l.parameters={...l.parameters,docs:{...(S=l.parameters)==null?void 0:S.docs,source:{originalSource:'() => <GraphCanvas nodes={clusterNodesWithSizes} draggable edges={[]} clusterAttribute="type" />',...(j=(x=l.parameters)==null?void 0:x.docs)==null?void 0:j.source}}};var G,E,T;u.parameters={...u.parameters,docs:{...(G=u.parameters)==null?void 0:G.docs,source:{originalSource:'() => <GraphCanvas nodes={singleNodeClusterNodes} draggable edges={[]} clusterAttribute="type" />',...(T=(E=u.parameters)==null?void 0:E.docs)==null?void 0:T.source}}};var f,k,z;d.parameters={...d.parameters,docs:{...(f=d.parameters)==null?void 0:f.docs,source:{originalSource:'() => <GraphCanvas nodes={imbalancedClusterNodes} draggable edges={[]} clusterAttribute="type" />',...(z=(k=d.parameters)==null?void 0:k.docs)==null?void 0:z.source}}};var D,L,O;n.parameters={...n.parameters,docs:{...(D=n.parameters)==null?void 0:D.docs,source:{originalSource:'() => <GraphCanvas nodes={manyClusterNodes} draggable edges={[]} clusterAttribute="type" />',...(O=(L=n.parameters)==null?void 0:L.docs)==null?void 0:O.source}}};var P,W,B;i.parameters={...i.parameters,docs:{...(P=i.parameters)==null?void 0:P.docs,source:{originalSource:'() => <GraphCanvas nodes={clusterNodes} draggable edges={clusterEdges} clusterAttribute="type" />',...(B=(W=i.parameters)==null?void 0:W.docs)==null?void 0:B.source}}};var I,R,_;g.parameters={...g.parameters,docs:{...(I=g.parameters)==null?void 0:I.docs,source:{originalSource:'() => <GraphCanvas nodes={clusterNodes} selections={[clusterNodes[0].id]} edges={clusterEdges} clusterAttribute="type" />',...(_=(R=g.parameters)==null?void 0:R.docs)==null?void 0:_.source}}};var q,w,F;p.parameters={...p.parameters,docs:{...(q=p.parameters)==null?void 0:q.docs,source:{originalSource:`() => <GraphCanvas nodes={clusterNodes} draggable edges={clusterEdges} clusterAttribute="type" onClusterPointerOut={cluster => console.log('cluster pointer out', cluster)} onClusterPointerOver={cluster => console.log('cluster pointer over', cluster)} onClusterClick={cluster => console.log('cluster click', cluster)} />`,...(F=(w=p.parameters)==null?void 0:w.docs)==null?void 0:F.source}}};var H,J,K;m.parameters={...m.parameters,docs:{...(H=m.parameters)==null?void 0:H.docs,source:{originalSource:`() => <GraphCanvas theme={{
  ...lightTheme,
  cluster: null
}} nodes={clusterNodes} draggable edges={clusterEdges} clusterAttribute="type" />`,...(K=(J=m.parameters)==null?void 0:J.docs)==null?void 0:K.source}}};var M,Q,U;b.parameters={...b.parameters,docs:{...(M=b.parameters)==null?void 0:M.docs,source:{originalSource:`() => <GraphCanvas theme={{
  ...lightTheme,
  cluster: {
    ...lightTheme.cluster,
    label: null
  }
}} nodes={clusterNodes} draggable edges={clusterEdges} clusterAttribute="type" />`,...(U=(Q=b.parameters)==null?void 0:Q.docs)==null?void 0:U.source}}};var V,X,Y;h.parameters={...h.parameters,docs:{...(V=h.parameters)==null?void 0:V.docs,source:{originalSource:`() => <GraphCanvas theme={{
  ...lightTheme,
  cluster: {
    ...lightTheme.cluster,
    stroke: null
  }
}} nodes={clusterNodes} draggable edges={clusterEdges} clusterAttribute="type" />`,...(Y=(X=h.parameters)==null?void 0:X.docs)==null?void 0:Y.source}}};var Z,$,ee;y.parameters={...y.parameters,docs:{...(Z=y.parameters)==null?void 0:Z.docs,source:{originalSource:`() => <GraphCanvas nodes={clusterNodesWithSizes} draggable edges={[]} layoutType="forceDirected3d" clusterAttribute="type">
    <directionalLight position={[0, 5, -4]} intensity={1} />
  </GraphCanvas>`,...(ee=($=y.parameters)==null?void 0:$.docs)==null?void 0:ee.source}}};var se,re,te;C.parameters={...C.parameters,docs:{...(se=C.parameters)==null?void 0:se.docs,source:{originalSource:'() => <GraphCanvas nodes={clusterNodes} draggable edges={[]} clusterAttribute="segment" />',...(te=(re=C.parameters)==null?void 0:re.docs)==null?void 0:te.source}}};export{i as Edges,p as Events,d as ImbalancedClusters,h as LabelsOnly,n as LargeDataset,m as NoBoundary,b as NoLabels,C as Partial,g as Selections,c as Simple,u as SingleNodeClusters,l as Sizes,y as ThreeDimensions,ye as default};
